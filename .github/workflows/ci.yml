name: Go

on:
  push:
    branches:
      - 'main'
      - 'feature/**'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.22.2

    - name: Install dependencies
      run: |
        go mod tidy
        go install golang.org/x/perf/cmd/benchstat@latest

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v ./...

    - name: Find Pull Request
      id: find_pr
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        PR_NUMBER=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
        "https://api.github.com/repos/$GITHUB_REPOSITORY/commits/$GITHUB_SHA/pulls" \
        | jq '.[0].number')
        if [ "$PR_NUMBER" == "null" ]; then
          echo  "prExists=false" >> $GITHUB_ENV
        else
          echo  "prExists=true" >> $GITHUB_ENV
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "$GITHUB_SHA"
        fi
 
    - name: Run Go Bench (current branch)
      if: env.prExists == 'true'
      run: |
        go test -count=10 -cpu=1,2,4 -benchmem -run=^$ -bench ^*$ ./... > bench-current.txt

    - name: Upload benchmark results
      if: env.prExists == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: bench-current
        path: app/bench-current.txt
 
    - name: Checkout main branch
      if: env.prExists == 'true'
      uses: actions/checkout@v2
      with:
        ref: main
 
    - name: Run Go Bench (main branch)
      if: env.prExists == 'true'
      run: |
        go test -count=10 -cpu=1,2,4 -benchmem -run=^$ -bench ^*$ ./... > bench-main.txt
 
    - name: Upload benchmark results
      if: env.prExists == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: bench-main
        path: app/bench-main.txt
 
    - uses: actions/checkout@v3
      if: env.prExists == 'true'
 
    - name: Download benchmark results
      if: env.prExists == 'true'
      uses: actions/download-artifact@v4
      with:
        name: bench-current
        path: app/
 
    - name: Download benchmark results
      if: env.prExists == 'true'
      uses: actions/download-artifact@v4
      with:
        name: bench-main
        path: app/
 
    - name: Compare Benchmarks
      if: env.prExists == 'true'
      run: |
        echo "Comparing Benchmarks"
        benchstat main=bench-main.txt current=bench-current.txt > result.txt
        cat result.txt

    - name: Create PR Comment
      if: env.prExists == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      run: |
        if [ -s result.txt ]; then
          COMMENT_BODY=$(echo -e "## Resultados do Benchmark\n\`\`\`" && cat result.txt && echo -e "\`\`\`")
          echo "$COMMENT_BODY" | gh pr comment $PR_NUMBER --body-file=-
        else
          echo "result.txt is empty. Skipping comment creation."
        fi
